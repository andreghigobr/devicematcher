plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
    id "org.sonarqube" version "4.3.1.3277"
}

group = 'com.experian'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

ext {
	// Spring
	springBootVersion = '3.4.5'

	// Libraries
	uapJavaVersion = '1.6.1'
	commonsLangVersion = '3.12.0'
	jacksonVersion = '2.15.2'

	// Database
	aerospikeVersion = '8.0.0'

	// Documentation
	// springdocVersion = '2.3.0'
	springdocVersion = '2.8.6'

	// Testing
	testcontainersVersion = '1.19.7'
}

bootRun {
	systemProperty 'spring.profiles.active', System.getProperty('spring.profiles.active', 'local')
}

dependencies {
	// libs
	implementation "com.github.ua-parser:uap-java:${uapJavaVersion}"
	implementation "org.apache.commons:commons-lang3:${commonsLangVersion}"
	implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
	implementation "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
	implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
	implementation "com.fasterxml.jackson.module:jackson-module-parameter-names:${jacksonVersion}"
	implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"

	// database
	implementation "com.aerospike:aerospike-client:${aerospikeVersion}"

	// api docs / swagger
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"

	// spring boot
	implementation "org.springframework.boot:spring-boot-starter-validation"
	implementation "org.springframework.boot:spring-boot-starter"
	implementation "org.springframework.boot:spring-boot-starter-web"

	// tests
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "org.testcontainers:testcontainers:${testcontainersVersion}"
	testImplementation "org.testcontainers:junit-jupiter:${testcontainersVersion}"
	testRuntimeOnly "org.junit.platform:junit-platform-launcher"
}

test {
	useJUnitPlatform {
		includeTags 'unit'
		includeTags 'integration'
	}
	systemProperty 'spring.profiles.active', System.getProperty('spring.profiles.active', 'test')
	testLogging {
		events "passed", "skipped", "failed"
		exceptionFormat "full"
	}
}

tasks.register('unitTest', Test) {
	description = 'Runs unit tests.'
	group = 'verification'

	useJUnitPlatform {
		includeTags 'unit'
		excludeTags 'integration'
	}

	// Integration tests might need more time
	systemProperty 'spring.profiles.active', System.getProperty('spring.profiles.active', 'test')
	testLogging {
		events "passed", "skipped", "failed"
		exceptionFormat "full"
	}
}

tasks.register('integrationTest', Test) {
	description = 'Runs integration tests.'
	group = 'verification'

	useJUnitPlatform {
		excludeTags 'unit'
		includeTags 'integration'
	}

	// Integration tests might need more time
	systemProperty 'spring.profiles.active', System.getProperty('spring.profiles.active', 'test')
	testLogging {
		events "passed", "skipped", "failed"
		exceptionFormat "full"
	}
}

sonar {
    properties {
        property "sonar.projectKey", "andreghigobr_devicematcher"
        property "sonar.organization", "aghigo-github"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}
